name: Build and Test
on: 
  push: {branches: ["main"]}
  pull_request:


jobs:
  build:
    env:
      ghc: 9.4.5
      cabal: 3.10.1.0
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{github.event.pull_request.head.sha || github.sha}}
    - name: Calculate hash keys
      uses: actions/github-script@v6
      id: cache-keys
      with:
        script: |
          function build_keys(comps) {
            const fallbacks = comps.reduce(
              (accum, cur) => 
                  [accum[0].concat([cur])].concat(accum),
              [[]]
            ).slice(1,-1).map(e => e.concat("").join('-'))

            return {key: comps.join("-"), restore: fallbacks.join("\n")}
          }
          const project_hash = await glob.hashFiles('cabal.project', 'cabal.project.freeze')
          core.setOutput('project', project_hash)

          const package_hash = await glob.hashFiles('**/package.yaml', '**/*.cabal')
          core.setOutput('package', package_hash)

          const source_hash = await glob.hashFiles('**/*.hs', '**/*.lhs', '**/*.hsig', '**/*.hs-boot', '**/*.c', '**/*.h', '**/*.chs', '**/*.hsc')
          core.setOutput('source', source_hash)

          const store_prefix = "store-${{runner.os}}-${{env.ghc}}"
          core.setOutput("store-prefix", store_prefix)
          const store_keys = build_keys([store_prefix, project_hash, package_hash])
          core.setOutput("store", store_keys.key)
          core.setOutput("store-restore", store_keys.restore)

          const dist_prefix = "dist-${{runner.os}}-${{env.ghc}}"
          core.setOutput("dist-prefix", dist_prefix)
          const dist_key_comps = [
            dist_prefix, project_hash, package_hash, source_hash
          ]
          const dist_keys = build_keys(dist_key_comps)
          core.setOutput('dist', dist_keys.key)
          core.setOutput('dist-restore', dist_keys.restore)

    - name: Setup Haskell
      uses: haskell/actions/setup@v2
      with:
        enable-stack: false
        cabal-version: ${{env.cabal}}
        ghc-version: ${{env.ghc}}
    - name: Restore ~/.cabal/store
      uses: actions/cache/restore@v3
      with:
        path: ~/.cabal/store
        key: ${{steps.cache-keys.outputs.store}}
        restore-keys: ${{steps.cache-keys.outputs.store-restore}}
    - name: Restore dist-newstyle
      uses: actions/cache/restore@v3
      with:
        path: dist-newstyle
        key: ${{steps.cache-keys.outputs.dist}}
        restore-keys: ${{steps.cache-keys.outputs.dist-restore}}
    - name: cabal configure
      run: |
        cabal v2-configure --enable-tests --enable-benchmarks --enable-optimisation=2
        cabal update
    - name: Build Dependencies
      run: | 
        cabal build --only-dependencies
    - name: Save ~/.cabal/store Cache
      uses: actions/cache/save@v3
      with:
        path: ~/.cabal/store
        key: ${{steps.cache-keys.outputs.store}}
    - name: Build All
      run: | 
        cabal build
    - name: Save dist-newstyle Cache
      uses: actions/cache/save@v3
      with:
        path: dist-newstyle
        key: ${{steps.cache-keys.outputs.dist}}
    - name: Test
      run: |
        cabal test --test-show-details always
    - name: Benchmark
      continue-on-error: true
      run: |
        cabal bench
